function num_diff = Finite_Diff_p(U,variable,derivative,order,h)
%% Finite Difference calculation for array U
% Works in the following way:
% Finite_Difference_p(U,1,3,4,h) calculates the third derivative
% of U with respect to the x or horizontal variable
% with a fourth order finite difference stencil with step size h.
% NOTE! Assumes / Enforces periodicity!
% First and second derivatives have 2nd, 4th, and 6th order schemes.
% Third and fourth derivatives have 2nd and 4th order schemes.
% https://en.wikipedia.org/wiki/Finite_difference_coefficient
%%

if variable==1
    n = size(U,2);
    if derivative==1
        if order==2
            num_diff = ([U(:,2:n),U(:,1)]-[U(:,n),U(:,1:n-1)])./(2*h);
        elseif order==4
            num_diff = (-0.25.*[U(:,3:n),U(:,1:2)]+2.*[U(:,2:n),U(:,1)]-...
                2.*[U(:,n),U(:,1:n-1)]+0.25.*[U(:,(n-1):n),U(:,1:n-2)])./(3*h);
        elseif order==6
            num_diff = (0.2.*[U(:,4:n),U(:,1:3)]...
                -1.8.*[U(:,3:n),U(:,1:2)]+...
                9.*[U(:,2:n),U(:,1)]-...
                9.*[U(:,n),U(:,1:n-1)]+...
                1.8.*[U(:,(n-1):n),U(:,1:n-2)]-...
                0.2.*[U(:,(n-2):n),U(:,1:n-3)])./(12*h);
        end
    elseif derivative==2
        if order==2
            num_diff = ([U(:,2:n),U(:,1)]-2.*U+[U(:,n),U(:,1:n-1)])./(2*h^2);
        elseif order==4
            num_diff = (-0.25.*[U(:,3:n),U(:,1:2)]+4.*[U(:,2:n),U(:,1)]-7.5.*U+...
                4.*[U(:,n),U(:,1:n-1)]-0.25.*[U(:,(n-1):n),U(:,1:n-2)])./(3*h^2);
        elseif order==6
            num_diff = ((1/90).*[U(:,4:n),U(:,1:3)]-...
                (3/20).*[U(:,3:n),U(:,1:2)]+...
                1.5.*[U(:,2:n),U(:,1)]-(49/18).*U +...
                1.5.*[U(:,n),U(:,1:n-1)]-...
                (3/20).*[U(:,(n-1):n),U(:,1:n-2)]+...
                (1/90).*[U(:,(n-2):n),U(:,1:n-3)])./(h^2);
        end
    elseif derivative==3
        if order==2
            num_diff = ([U(:,3:n),U(:,1:2)]-2.*[U(:,2:n),U(:,1)]+...
                2.*[U(:,n),U(:,1:n-1)]-[U(:,(n-1):n),U(:,1:n-2)])./(2*h^3);
        elseif order==4
            num_diff = (-[U(:,4:n),U(:,1:3)]+...
                8.*[U(:,3:n),U(:,1:2)]-...
                13.*[U(:,2:n),U(:,1)]+...
                13.*[U(:,n),U(:,1:n-1)]-...
                8.*[U(:,(n-1):n),U(:,1:n-2)]+...
                [U(:,(n-2):n),U(:,1:n-3)])./(8*h^3);
        end
    elseif derivative==4
        if order==2
            num_diff = ([U(:,3:n),U(:,1:2)]-4.*[U(:,2:n),U(:,1)]+6.*U-...
                4.*[U(:,n),U(:,1:n-1)]+[U(:,(n-1):n),U(:,1:n-2)])./(h^4);
        elseif order==4
            num_diff = (-(1/6).*[U(:,4:n),U(:,1:3)]+...
                2.*[U(:,3:n),U(:,1:2)]-...
                6.5.*[U(:,2:n),U(:,1)]+(28/3).*U-...
                6.5.*[U(:,n),U(:,1:n-1)]+...
                2.*[U(:,(n-1):n),U(:,1:n-2)]-...
                (1/6).*[U(:,(n-2):n),U(:,1:n-3)])./(h^4);
        end
    end
elseif variable==2
    m = size(U,1);
    if derivative==1
        if order==2
            num_diff = ([U(2:m,:);U(1,:)]-[U(m,:);U(1:m-1,:)])./(2*h);
        elseif order==4
            num_diff = (-0.25.*[U(3:m,:);U(1:2,:)]+2.*[U(2:m,:);U(1,:)]-...
                2.*[U(m,:);U(1:m-1,:)]+0.25.*[U((m-1):m,:);U(1:(m-2),:)])./(3*h);
        elseif order==6
            num_diff = (0.2.*[U(4:m,:);U(1:3,:)]-...
                1.8.*[U(3:m,:);U(1:2,:)]+...
                9.*[U(2:m,:);U(1,:)]-...
                9.*[U(m,:);U(1:m-1,:)]+...
                1.8.*[U((m-1):m,:);U(1:(m-2),:)]-...
                0.2.*[U((m-2):m,:);U(1:(m-3),:)])./(12*h);
        end
    elseif derivative==2
        if order==2
            num_diff = ([U(2:m,:);U(1,:)]-2.*U+[U(m,:);U(1:m-1,:)])./(h^2);
        elseif order==4
            num_diff = (-0.25.*[U(3:m,:);U(1:2,:)]+4.*[U(2:m,:);U(1,:)]-7.5.*U+...
                4.*[U(m,:);U(1:m-1,:)]+0.25.*[U((m-1):m,:);U(1:(m-2),:)])./(3*h^2);
        elseif order==6
            num_diff = ((1/90).*[U(4:m,:);U(1:3,:)]-...
                (3/20).*[U(3:m,:);U(1:2,:)]+...
                1.5.*[U(2:m,:);U(1,:)]-(49/18).*U +...
                1.5.*[U(m,:);U(1:m-1,:)]-...
                (3/20).*[U((m-1):m,:);U(1:(m-2),:)]+...
                (1/90).*[U((m-2):m,:);U(1:(m-3),:)])./(h^2);
        end
    elseif derivative==3
        if order==2
            num_diff = ([U(3:m,:);U(1:2,:)]-2.*[U(2:m,:);U(1,:)]+...
                2.*[U(m,:);U(1:m-1,:)]-[U((m-1):m,:);U(1:(m-2),:)])./(2*h^3);
        elseif order==4
            num_diff = (-[U(4:m,:);U((m-3):m,:)]+...
                8.*[U(3:m,:);U(1:2,:)]-...
                13.*[U(2:m,:);U(1,:)]+...
                13.*[U(m,:);U(1:m-1,:)]-...
                8.*[U((m-1):m,:);U(1:(m-2),:)]+...
                [U((m-2):m,:);U(1:(m-3),:)])./(8*h^3);
        end
    elseif derivative==4
        if order==2
            num_diff = ([U(3:m,:);U(1:2,:)]-4.*[U(2:m,:);U(1,:)]+6.*U-...
                4.*[U(m,:);U(1:m-1,:)]-[U((m-1):m,:);U(1:(m-2),:)])./(h^4);
        elseif order==4
            num_diff = (-(1/6).*[U(4:m,:);U(1:3,:)]+...
                2.*[U(3:m,:);U(1:2,:)]-...
                6.5.*[U(2:m,:);U(1,:)]+(28/3).*U-...
                6.5.*[U(m,:);U(1:m-1,:)]+...
                2.*[U((m-1):m,:);U(1:(m-2),:)]-...
                (1/6).*[U((m-2):m,:);U(1:(m-3),:)])./(h^4);
        end
    end
end

